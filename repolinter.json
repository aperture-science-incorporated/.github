{
    "$schema": "https://raw.githubusercontent.com/prototypicalpro/repolinter/master/rulesets/schema.json",
    "version": 2,
    "axioms": {
        "linguist":"language",
        "licensee":"license",
        "packagers":"packager"
    },
    "rules": {
        "code-of-conduct-file-up-to-date": {
            "level": "warning",
            "rule": {
                "type": "file-hash",
                "options": {
                    "globsAny": [
                        "{docs/,.github/,}CODEOFCONDUCT*", 
                        "{docs/,.github/,}CODE-OF-CONDUCT*", 
                        "{docs/,.github/,}CODE_OF_CONDUCT*"
                    ],
                    "nocase": true,
                    "hash": "c0b76cd474db37b060a909aba86a85f60381bbdd46ce1575dde2f6e86e319c63"
                }
            },
            "fix": {
                "type": "file-create",
                "options": {
                    "file": "CODE_OF_CONDUCT.md",
                    "replace": true,
                    "text": { "url": "https://raw.githubusercontent.com/aperture-science-incorporated/.github/master/CODE_OF_CONDUCT.md" }
                }
            },
            "policyInfo": "Here is some policy information about the code of conduct",
            "policyUrl": "www.example.com/morepolicyinfo"
        },
        "community-header-present": {
            "level": "error",
            "rule": {
                "type": "file-starts-with",
                "options": {
                    "globsAll": ["README*"],
                    "nocase": true,
                    "lineCount": 1, 
                    "patterns": ["\\[\\s*\\!\\[[a-z0-9\\s]+\\]\\(\\s*[\\/\\.a-z0-9\\-\\_\\~:]+\\s*\\)\\s*]\\(\\s*https:\\/\\/opensource\\.newrelic\\.com\\/oss-category\\/#([\\/\\.a-z0-9\\-\\_\\~]+)\\s*\\)"],
                    "human-readable-pattern": "Open source category header (see https://opensource.newrelic.com/oss-category)",
                    "flags": "i", 
                    "succeed-on-non-existent": false
                }
            },
            "policyInfo": "Here is some policy information about the community header",
            "policyUrl": "www.example.com/morepolicyinfo"
        },
        "license-file-exists": {
            "level": "error",
            "rule": {
                "type": "file-existence",
                "options": {
                    "globsAny": ["LICENSE*", "COPYING*"],
                    "nocase": true
                }
            },
            "fix": {
                "type": "file-create",
                "options": {
                    "file": "LICENSE",
                    "text": { "url": "https://raw.githubusercontent.com/aperture-science-incorporated/.github/master/LICENCE" }
                }
            },
            "policyInfo": "New Relic recommends lorem ipsum dolorem si amet",
            "policyUrl": "www.example.com/morepolicyinfo"
        },
        "readme-file-exists": {
            "level": "error",
            "rule": {
                "type": "file-existence",
                "options": {
                    "globsAny": ["README*"],
                    "nocase": true
                }
            }
        },
        "code-of-conduct-file-exists": {
            "level": "error",
            "rule": {
                "type": "file-existence",
                "options": {
                    "globsAny": [
                        "{docs/,.github/,}CODEOFCONDUCT*",
                        "{docs/,.github/,}CODE-OF-CONDUCT*",
                        "{docs/,.github/,}CODE_OF_CONDUCT*"
                    ],
                    "nocase": true
                }
            }
        },
        "contributing-file-exists": {
            "level": "error",
            "rule": {
                "type": "file-existence",
                "options": {
                    "globsAny": ["{docs/,.github/,}CONTRIB*"],
                    "nocase": true
                }
            }
        },
        "changelog-file-exists": {
            "level": "error",
            "rule": {
                "type": "file-existence",
                "options": {
                    "globsAny": ["CHANGELOG*"],
                    "nocase": true
                }
            }
        },
        "security-file-exists": {
            "level": "error",
            "rule": {
                "type": "file-existence",
                "options": {
                    "globsAny": ["{docs/,.github/,}SECURITY.md"]
                }
            }
        },
        "support-file-exists": {
            "level": "error",
            "rule": {
                "type": "file-existence",
                "options": {
                    "globsAny": ["{docs/,.github/,}SUPPORT*"],
                    "nocase": true
                }
            }
        },
        "readme-references-license": {
            "level": "error",
            "rule": {
                "type": "file-contents",
                "options": {
                    "globsAll": ["README*"],
                    "content": "license",
                    "flags": "i"
                }
            }
        },
        "binaries-not-present": {
            "level": "error",
            "rule": {
                "type": "file-type-exclusion",
                "options": {
                    "type": ["**/*.exe", "**/*.dll", "!node_modules/**"]
                }
            }
        },
        "test-directory-exists": {
            "level": "error",
            "rule": {
                "type": "directory-existence",
                "options": {
                    "globsAny": ["**/test*", "**/specs"],
                    "nocase": true
                }
            }
        },
        "integrates-with-ci": {
            "level": "error",
            "rule": {
                "type": "file-existence",
                "options": {
                    "globsAny": [
                        ".gitlab-ci.yml",
                        ".travis.yml",
                        "appveyor.yml",
                        ".appveyor.yml",
                        "circle.yml",
                        ".circleci/config.yml",
                        "Jenkinsfile",
                        ".drone.yml",
                        ".github/workflows/*",
                        "azure-pipelines.yml"
                    ]
                }
            }
        },
        "code-of-conduct-file-contains-email": {
            "level": "error",
            "rule": {
                "type": "file-contents",
                "options": {
                    "globsAll": [
                        "CODEOFCONDUCT*",
                        "CODE-OF-CONDUCT*",
                        "CODE_OF_CONDUCT*",
                        ".github/CODEOFCONDUCT*",
                        ".github/CODE-OF-CONDUCT*",
                        ".github/CODE_OF_CONDUCT*"
                    ],
                    "content": ".+@.+\\..+",
                    "flags": "i",
                    "human-readable-content": "email address"
                }
            }
        },
        "github-issue-template-exists": {
            "level": "error",
            "rule": {
                "type": "file-existence",
                "options": {
                    "globsAny": ["ISSUE_TEMPLATE*", ".github/ISSUE_TEMPLATE*"]
                }
            }
        },
        "github-pull-request-template-exists": {
            "level": "error",
            "rule": {
                "type": "file-existence",
                "options": {
                    "globsAny": ["PULL_REQUEST_TEMPLATE*", ".github/PULL_REQUEST_TEMPLATE*"]
                }
            }
        },
        "javascript-package-metadata-exists": {
            "level": "error",
            "where": ["language=javascript"],
            "rule": {
                "type": "file-existence",
                "options": {
                    "globsAny": ["package.json"]
                }
            }
        },
        "ruby-package-metadata-exists": {
            "level": "error",
            "where": ["language=ruby"],
            "rule": {
                "type": "file-existence",
                "options": {
                    "globsAny": ["Gemfile"]
                }
            }
        },
        "java-package-metadata-exists": {
            "level": "error",
            "where": ["language=java"],
            "rule": {
                "type": "file-existence",
                "options": {
                    "globsAny": ["pom.xml", "build.xml", "build.gradle"]
                }
            }
        },
        "python-package-metadata-exists": {
            "level": "error",
            "where": ["language=python"],
            "rule": {
                "type": "file-existence",
                "options": {
                    "globsAny": ["setup.py", "requirements.txt"]
                }
            }
        },
        "objective-c-package-metadata-exists": {
            "level": "error",
            "where": ["language=objective-c"],
            "rule": {
                "type": "file-existence",
                "options": {
                    "globsAny": ["Cartfile", "Podfile", "*.podspec"]
                }
            }
        },
        "swift-package-metadata-exists": {
            "level": "error",
            "where": ["language=swift"],
            "rule": {
                "type": "file-existence",
                "options": {
                    "globsAny": ["Package.swift"]
                }
            }
        },
        "erlang-package-metadata-exists": {
            "level": "error",
            "where": ["language=erlang"],
            "rule": {
                "type": "file-existence",
                "options": {
                    "globsAny": ["rebar.config"]
                }
            }
        },
        "elixir-package-metadata-exists": {
            "level": "error",
            "where": ["language=elixir"],
            "rule": {
                "type": "file-existence",
                "options": {
                    "globsAny": ["mix.exs"]
                }
            }
        },
        "license-detectable-by-licensee": {
            "level": "off",
            "where": ["license=*"],
            "rule": {
                "type": "license-detectable-by-licensee",
                "options": {}
            }
        }
    }
}